<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KafkaTemplate on Sanoon with Lemon</title><link>https://sanoon.me/tags/KafkaTemplate/</link><description>Recent content in KafkaTemplate on Sanoon with Lemon</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 16 May 2020 23:24:13 +0800</lastBuildDate><atom:link href="https://sanoon.me/tags/KafkaTemplate/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring-boot 集成 Kafka</title><link>https://sanoon.me/posts/Spring-boot-%E9%9B%86%E6%88%90-Kafka/</link><pubDate>Sat, 16 May 2020 23:24:13 +0800</pubDate><guid>https://sanoon.me/posts/Spring-boot-%E9%9B%86%E6%88%90-Kafka/</guid><description>POM 引入 Spring-boot-kafka &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.kafka&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-kafka&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.1.1.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 创建启动类 @SpringBootApplication public class KafkaApplication { public static void main(String[] args) { SpringApplication.run(KafkaApplication.class, args); } } 创建生产者配置类 @Configuration public class ProducerConfiguration { public ProducerConfiguration() { } @Bean public Map&amp;lt;String, Object&amp;gt; producerConfigs() { HashMap&amp;lt;String, Object&amp;gt; props = new HashMap&amp;lt;&amp;gt;(); props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, &amp;quot;localhost:9092&amp;quot;); props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, IntegerSerializer.class); props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class); props.put(ProducerConfig.MAX_BLOCK_MS_CONFIG, 5000); return props; } @Bean public ProducerFactory&amp;lt;String, String&amp;gt; producerFactory() { return new DefaultKafkaProducerFactory&amp;lt;&amp;gt;(producerConfigs()); } @Bean public KafkaTemplate&amp;lt;String, String&amp;gt; kafkaTemplate() { return new KafkaTemplate&amp;lt;&amp;gt;(producerFactory()); } @Bean public Producer sender() { return new Producer(); } } 创</description></item></channel></rss>